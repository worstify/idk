local a=game:GetService("HttpService")local b={}do b.Folder="LinoriaLibSettings"b.Library=nil b.BuiltInThemes={Default={1,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"1c1c1c\",\"AccentColor\":\"0055ff\",\"BackgroundColor\":\"141414\",\"OutlineColor\":\"323232\"}")},Dracula={2;a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"232533\",\"AccentColor\":\"6271a5\",\"BackgroundColor\":\"1b1c27\",\"OutlineColor\":\"7c82a7\"}")},["Bitch Bot"]={3,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"1e1e1e\",\"AccentColor\":\"7e48a3\",\"BackgroundColor\":\"232323\",\"OutlineColor\":\"141414\"}")};["Kiriot Hub"]={4,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"30333b\",\"AccentColor\":\"ffaa00\",\"BackgroundColor\":\"1a1c20\",\"OutlineColor\":\"141414\"}")};Fatality={5,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"1e1842\",\"AccentColor\":\"c50754\",\"BackgroundColor\":\"191335\",\"OutlineColor\":\"3c355d\"}")},Green={6,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"141414\",\"AccentColor\":\"00ff8b\",\"BackgroundColor\":\"1c1c1c\",\"OutlineColor\":\"3c3c3c\"}")},Jester={7,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"242424\",\"AccentColor\":\"db4467\",\"BackgroundColor\":\"1c1c1c\",\"OutlineColor\":\"373737\"}")},Mint={8,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"242424\",\"AccentColor\":\"3db488\",\"BackgroundColor\":\"1c1c1c\",\"OutlineColor\":\"373737\"}")};["Tokyo Night"]={9,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"191925\",\"AccentColor\":\"6759b3\",\"BackgroundColor\":\"16161f\",\"OutlineColor\":\"323232\"}")},Ubuntu={10,a:JSONDecode("{\"FontColor\":\"ffffff\",\"MainColor\":\"3e3e3e\",\"AccentColor\":\"e2581e\",\"BackgroundColor\":\"323232\",\"OutlineColor\":\"191919\"}")}}function b.ApplyTheme(b,a)local c=b:GetCustomTheme(a)local d=c or b.BuiltInThemes[a]if not d then return end local e=d[2]for a,c in next,c or e do b.Library[a]=Color3.fromHex(c)if Options[a]then Options[a]:SetValueRGB(Color3.fromHex(c))end end b:ThemeUpdate()end function b.ThemeUpdate(a)a.Library.FontColor=Options.FontColor.Value a.Library.MainColor=Options.MainColor.Value a.Library.AccentColor=Options.AccentColor.Value a.Library.BackgroundColor=Options.BackgroundColor.Value a.Library.OutlineColor=Options.OutlineColor.Value a.Library.AccentColorDark=a.Library:GetDarkerColor(a.Library.AccentColor)a.Library:UpdateColorsUsingRegistry()end function b.LoadDefault(a)local b="Default"local c=isfile(a.Folder.."/themes/default.txt")and readfile(a.Folder.."/themes/default.txt")local d=true if c then if a.BuiltInThemes[c]then b=c elseif a:GetCustomTheme(c)then b=c d=false end elseif a.BuiltInThemes[a.DefaultTheme]then b=a.DefaultTheme end if d then Options.ThemeManager_ThemeList:SetValue(b)else a:ApplyTheme(b)end end function b.SaveDefault(b,a)writefile(b.Folder.."/themes/default.txt",a)end function b.CreateThemeManager(c,a)(a:AddLabel("Background color")):AddColorPicker("BackgroundColor",{Default=c.Library.BackgroundColor});(a:AddLabel("Main color")):AddColorPicker("MainColor",{Default=c.Library.MainColor});(a:AddLabel("Accent color")):AddColorPicker("AccentColor",{Default=c.Library.AccentColor});(a:AddLabel("Outline color")):AddColorPicker("OutlineColor",{Default=c.Library.OutlineColor});(a:AddLabel("Font color")):AddColorPicker("FontColor",{Default=c.Library.FontColor})local d={}for a,b in next,c.BuiltInThemes do table.insert(d,a)end table.sort(d,function(a,b)return c.BuiltInThemes[a][1]<c.BuiltInThemes[b][1]end)a:AddDivider()a:AddDropdown("ThemeManager_ThemeList",{Text="Theme list";Values=d,Default=1})a:AddButton("Set as default",function()c:SaveDefault(Options.ThemeManager_ThemeList.Value)c.Library:Notify(string.format("Set default theme to %q",Options.ThemeManager_ThemeList.Value))end)Options.ThemeManager_ThemeList:OnChanged(function()c:ApplyTheme(Options.ThemeManager_ThemeList.Value)end)a:AddDivider()a:AddDropdown("ThemeManager_CustomThemeList",{Text="Custom themes",Values=c:ReloadCustomThemes(),AllowNull=true,Default=1})a:AddInput("ThemeManager_CustomThemeName",{Text="Custom theme name"})a:AddButton("Load custom theme",function()c:ApplyTheme(Options.ThemeManager_CustomThemeList.Value)end)a:AddButton("Save custom theme",function()c:SaveCustomTheme(Options.ThemeManager_CustomThemeName.Value)Options.ThemeManager_CustomThemeList.Values=c:ReloadCustomThemes()Options.ThemeManager_CustomThemeList:SetValues()Options.ThemeManager_CustomThemeList:SetValue(nil)end)a:AddButton("Refresh list",function()Options.ThemeManager_CustomThemeList.Values=c:ReloadCustomThemes()Options.ThemeManager_CustomThemeList:SetValues()Options.ThemeManager_CustomThemeList:SetValue(nil)end)a:AddButton("Set as default",function()if Options.ThemeManager_CustomThemeList.Value~=nil and Options.ThemeManager_CustomThemeList.Value~=""then c:SaveDefault(Options.ThemeManager_CustomThemeList.Value)c.Library:Notify(string.format("Set default theme to %q",Options.ThemeManager_CustomThemeList.Value))end end)b:LoadDefault()local function e()c:ThemeUpdate()end Options.BackgroundColor:OnChanged(e)Options.MainColor:OnChanged(e)Options.AccentColor:OnChanged(e)Options.OutlineColor:OnChanged(e)Options.FontColor:OnChanged(e)end function b.GetCustomTheme(c,b)local d=c.Folder..("/themes/"..b)if not isfile(d)then return nil end local e=readfile(d)local f,g=pcall(a.JSONDecode,a,e)if not f then return nil end return g end function b.SaveCustomTheme(c,b)if b:gsub(" ","")==""then return c.Library:Notify("Invalid file name for theme (empty)",3)end local d={}local e={"FontColor";"MainColor";"AccentColor";"BackgroundColor";"OutlineColor"}for a,b in next,e do d[b]=Options[b].Value:ToHex()end writefile(c.Folder..("/themes/"..(b..".json")),a:JSONEncode(d))end function b.ReloadCustomThemes(a)local b=listfiles(a.Folder.."/themes")local c={}for a=1,#b,1 do local d=b[a]if d:sub(-5)==".json"then local a=d:find(".json",1,true)local b=d:sub(a,a)while b~="/"and(b~="\\"and b~="")do a=a-1 b=d:sub(a,a)end if b=="/"or b=="\\"then table.insert(c,d:sub(a+1))end end end return c end function b.SetLibrary(b,a)b.Library=a end function b.BuildFolderTree(a)local b={}local c=a.Folder:split("/")for a=1,#c,1 do b[#b+1]=table.concat(c,"/",1,a)end table.insert(b,a.Folder.."/themes")table.insert(b,a.Folder.."/settings")for a=1,#b,1 do local c=b[a]if not isfolder(c)then makefolder(c)end end end function b.SetFolder(b,a)b.Folder=a b:BuildFolderTree()end function b.CreateGroupBox(b,a)assert(b.Library,"Must set ThemeManager.Library first!")return a:AddLeftGroupbox("Themes")end function b.ApplyToTab(b,a)assert(b.Library,"Must set ThemeManager.Library first!")local c=b:CreateGroupBox(a)b:CreateThemeManager(c)end function b.ApplyToGroupbox(b,a)assert(b.Library,"Must set ThemeManager.Library first!")b:CreateThemeManager(a)end b:BuildFolderTree()end return b